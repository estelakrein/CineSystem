/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import daos.DaoCategoria;
import daos.DaoClassificacao;
import daos.DaoFilme;
import daos.DaoIdioma;
import daos.DaoLegenda;
import daos.DaoSala;
import daos.DaoSessao;
import entidades.Categoria;
import entidades.Classificacao;
import entidades.Filme;
import entidades.Idioma;
import entidades.Legenda;
import entidades.Sala;
import entidades.Sessao;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.apache.log4j.Logger;

public class DlgConsulta extends javax.swing.JDialog {

    private org.apache.log4j.Logger logger = Logger.getLogger(DlgConsulta.class.getName());
    LocalDateTime agora = LocalDateTime.now();
    
    public String tabela;
    public int retorno = -1;

    /**
     * Creates new form DlgConsulta
     */
    public DlgConsulta(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("Consultar " + tabela);
        tfdPesquisar.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfdPesquisar = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPesquisa = new javax.swing.JTable();
        btnFechar = new javax.swing.JButton();
        btnSelecionar = new javax.swing.JButton();

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Buscar");

        btnPesquisar.setText("Buscar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        tblPesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição"
            }
        ));
        jScrollPane1.setViewportView(tblPesquisa);

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(tfdPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPesquisar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSelecionar)
                .addGap(18, 18, 18)
                .addComponent(btnFechar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfdPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnPesquisar))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFechar)
                    .addComponent(btnSelecionar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        if (tabela == "Filme") {
            List<Filme> resultado = new ArrayList();
            tblPesquisa.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblPesquisa.getColumnModel().getColumn(1).setPreferredWidth(150);
            DefaultTableModel modelo = (DefaultTableModel) tblPesquisa.getModel();
            modelo.setNumRows(0);
            try {
                DaoFilme daofilme = new DaoFilme();
                resultado = daofilme.consultaParam(tfdPesquisar.getText());
                for (int i = 0; i < resultado.size(); i++) {
                    Filme filme = resultado.get(i);
                    modelo.addRow(new Object[]{filme.getCodigo(), filme.getNome()});

                }
            } catch (HibernateException hibEx) {
                hibEx.printStackTrace();
                logger.error(agora+" ERROR: Erro ao consutar a tabela: Filmes! --  Tela de Consulta");
            }
        }
        if (tabela == "Sala") {
            List<Sala> resultado = new ArrayList();
            tblPesquisa.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblPesquisa.getColumnModel().getColumn(1).setPreferredWidth(150);
            DefaultTableModel modelo = (DefaultTableModel) tblPesquisa.getModel();
            modelo.setNumRows(0);
            try {
                DaoSala daoSala = new DaoSala();
                resultado = daoSala.consultaParam(tfdPesquisar.getText());
                for (int i = 0; i < resultado.size(); i++) {
                    Sala sala = resultado.get(i);
                    modelo.addRow(new Object[]{sala.getCodigo(), sala.getDescricao()});

                }
            } catch (HibernateException hibEx) {
                hibEx.printStackTrace();
                logger.error(agora+" ERROR: Erro ao consutar a tabela: Sala! --  Tela de Consulta");
            }
        }
        if (tabela == "Idioma") {
            List<Idioma> resultado = new ArrayList();
            tblPesquisa.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblPesquisa.getColumnModel().getColumn(1).setPreferredWidth(150);
            DefaultTableModel modelo = (DefaultTableModel) tblPesquisa.getModel();
            modelo.setNumRows(0);
            try {
                DaoIdioma daoIdioma = new DaoIdioma();
                resultado = daoIdioma.consultaParam(tfdPesquisar.getText());
                for (int i = 0; i < resultado.size(); i++) {
                    Idioma idioma = resultado.get(i);
                    modelo.addRow(new Object[]{idioma.getCodigo(), idioma.getIdioma()});

                }
            } catch (HibernateException hibEx) {
                hibEx.printStackTrace();
                logger.error(agora+" ERROR: Erro ao consutar a tabela: Idioma! --  Tela de Consulta");
            }
        }
        if (tabela == "Categoria") {
            List<Categoria> resultado = new ArrayList();
            tblPesquisa.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblPesquisa.getColumnModel().getColumn(1).setPreferredWidth(150);
            DefaultTableModel modelo = (DefaultTableModel) tblPesquisa.getModel();
            modelo.setNumRows(0);
            try {
                DaoCategoria daoCategoria = new DaoCategoria();
                resultado = daoCategoria.consultaParam(tfdPesquisar.getText());
                for (int i = 0; i < resultado.size(); i++) {
                    Categoria categoria = resultado.get(i);
                    modelo.addRow(new Object[]{categoria.getCodigo(), categoria.getDescricao()});

                }
            } catch (HibernateException hibEx) {
                hibEx.printStackTrace();
                logger.error(agora+" ERROR: Erro ao consutar a tabela: Categoria! --  Tela de Consulta");
            }
        }
        if (tabela == "Legenda") {
            List<Legenda> resultado = new ArrayList();
            tblPesquisa.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblPesquisa.getColumnModel().getColumn(1).setPreferredWidth(150);
            DefaultTableModel modelo = (DefaultTableModel) tblPesquisa.getModel();
            modelo.setNumRows(0);
            try {
                DaoLegenda daoLegenda = new DaoLegenda();
                resultado = daoLegenda.consultaParam(tfdPesquisar.getText());
                for (int i = 0; i < resultado.size(); i++) {
                    Legenda legenda = resultado.get(i);
                    modelo.addRow(new Object[]{legenda.getCodigo(), legenda.getDescricao()});

                }
            } catch (HibernateException hibEx) {
                hibEx.printStackTrace();
                logger.error(agora+" ERROR: Erro ao consutar a tabela: Legenda! --  Tela de Consulta");
            }
        }
        if (tabela == "Classificacao") {
            List<Classificacao> resultado = new ArrayList();
            tblPesquisa.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblPesquisa.getColumnModel().getColumn(1).setPreferredWidth(150);
            DefaultTableModel modelo = (DefaultTableModel) tblPesquisa.getModel();
            modelo.setNumRows(0);
            try {
                DaoClassificacao daoClassificacao = new DaoClassificacao();
                resultado = daoClassificacao.consultaParam(tfdPesquisar.getText());
                for (int i = 0; i < resultado.size(); i++) {
                    Classificacao clas = resultado.get(i);
                    modelo.addRow(new Object[]{clas.getCodigo(), clas.getDescricao()});

                }
            } catch (HibernateException hibEx) {
                hibEx.printStackTrace();
                logger.error(agora+" ERROR: Erro ao consutar a tabela: Classificação! --  Tela de Consulta");
            }
        }
        if (tabela == "Sessao") {
            List<Sessao> resultado = new ArrayList();
            tblPesquisa.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblPesquisa.getColumnModel().getColumn(1).setPreferredWidth(150);
            DefaultTableModel modelo = (DefaultTableModel) tblPesquisa.getModel();
            modelo.setNumRows(0);
            try {
                DaoSessao daoSessao = new DaoSessao();
                resultado = daoSessao.consultaFilme(tfdPesquisar.getText());
                for (int i = 0; i < resultado.size(); i++) {
                    Sessao sessao = resultado.get(i);
                    modelo.addRow(new Object[]{sessao.getCodigo(), ((sessao.getData()).toString() + " " + (sessao.getHorario()).toString())});

                }
            } catch (HibernateException hibEx) {
                hibEx.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
        String codigo = String.valueOf(tblPesquisa.getValueAt(tblPesquisa.getSelectedRow(), 0));
        
        this.retorno = Integer.parseInt(codigo);
        this.dispose();
    }//GEN-LAST:event_btnSelecionarActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.retorno = 0;
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgConsulta dialog = new DlgConsulta(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPesquisa;
    private javax.swing.JTextField tfdPesquisar;
    // End of variables declaration//GEN-END:variables
}
