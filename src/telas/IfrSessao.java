/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import apoio.Formatacao;
import daos.DaoGenerico;
import entidades.Filme;
import entidades.Sala;
import entidades.Sessao;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author estel
 */
public class IfrSessao extends javax.swing.JInternalFrame {

    String consulta = "";

    /**
     * Creates new form IfrSessao
     */
    public IfrSessao() {
        initComponents();
        inicia();

    }

    public void popularTabela() {

        List<Sessao> resultado = new ArrayList();
        String sql = "FROM Sessao "
                + "ORDER BY codigo";
        tblSessao.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblSessao.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblSessao.getColumnModel().getColumn(2).setPreferredWidth(70);
        tblSessao.getColumnModel().getColumn(3).setPreferredWidth(80);
        tblSessao.getColumnModel().getColumn(4).setPreferredWidth(60);
        tblSessao.getColumnModel().getColumn(5).setPreferredWidth(50);
        DefaultTableModel modelo = (DefaultTableModel) tblSessao.getModel();
        modelo.setNumRows(0);
        try {
            Session sessao = HibernateUtil.getSessionFactory().openSession();
            org.hibernate.Query query = sessao.createQuery(sql);
            resultado = query.list();
            for (int i = 0; i < resultado.size(); i++) {
                Sessao ses = resultado.get(i);
                modelo.addRow(new Object[]{ses.getCodigo(),
                    ses.getFilme(), ses.getSala(), Formatacao.calendarioParaData(ses.getData()), Formatacao.calendarioParaHora(ses.getHorario()), ses.getValor()});

            }
        } catch (HibernateException hibEx) {
            hibEx.printStackTrace();
        }

        // permite seleção de apenas uma linha da tabela
        tblSessao.setSelectionMode(0);
    }

    public void inicia() {
        tfdBuscar.setText("");
        tfdCdFilme.setText("");
        tfdCdSala.setText("");
        tfdFilme.setText("");
        tfdSala.setText("");
        tfdValor.setText("");
        ftfData.setText("");
        ftfHorario.setText("");
        popularTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfdCdFilme = new javax.swing.JTextField();
        tfdCdSala = new javax.swing.JTextField();
        ftfData = new javax.swing.JFormattedTextField();
        ftfHorario = new javax.swing.JFormattedTextField();
        tfdFilme = new javax.swing.JTextField();
        tfdSala = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfdValor = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfdBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        rbtFilme = new javax.swing.JRadioButton();
        rbtSala = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSessao = new javax.swing.JTable();
        btnFechar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();

        setTitle("Sessões");

        jLabel1.setText("Filme");

        jLabel2.setText("Sala");

        jLabel4.setText("Data");

        jLabel5.setText("Horário");

        tfdCdFilme.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfdCdFilmeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfdCdFilmeFocusLost(evt);
            }
        });

        tfdCdSala.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfdCdSalaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfdCdSalaFocusLost(evt);
            }
        });

        ftfData.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ftfDataFocusGained(evt);
            }
        });

        jLabel6.setText("Valor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfdCdSala, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfdCdFilme, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfdFilme, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfdSala, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(78, 78, 78))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ftfData)
                                .addGap(340, 340, 340))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ftfHorario, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(tfdValor))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfdCdFilme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdFilme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfdCdSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ftfData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ftfHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfdValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cadastro", jPanel1);

        jLabel3.setText("Buscar");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        rbtFilme.setSelected(true);
        rbtFilme.setText("Filme");

        rbtSala.setText("Sala");

        tblSessao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Filme", "Sala", "Data", "Hora", "Valor"
            }
        ));
        tblSessao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSessaoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSessao);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(rbtFilme)
                        .addGap(18, 18, 18)
                        .addComponent(rbtSala)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfdBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(btnBuscar)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtFilme)
                    .addComponent(rbtSala))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfdBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBuscar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Listagem", jPanel2);

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnConsultar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar)
                .addGap(18, 18, 18)
                .addComponent(btnExcluir)
                .addGap(18, 18, 18)
                .addComponent(btnFechar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFechar)
                    .addComponent(btnExcluir)
                    .addComponent(btnSalvar)
                    .addComponent(btnConsultar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        List resultado = null;
        Session sessao = null;
        try {
            sessao = HibernateUtil.getSessionFactory().openSession();
            Transaction transacao = sessao.beginTransaction();
            String id = String.valueOf(tblSessao.getValueAt(tblSessao.getSelectedRow(), 0));

            org.hibernate.Query query = sessao.createQuery("FROM Sessao WHERE codigo = " + id);

            resultado = query.list();
            for (Object obj : resultado) {
                Sessao ses = (Sessao) obj;
                sessao.delete(ses);
                transacao.commit();
                JOptionPane.showMessageDialog(null, "Sessão excluída com sucesso!");
            }
        } catch (HibernateException hibEx) {
            hibEx.printStackTrace();
        }

    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            Sessao ses = new Sessao();
            ses.setFilme(Integer.valueOf(tfdCdFilme.getText()));
            ses.setSala(Integer.valueOf(tfdCdSala.getText()));
            ses.setData(Formatacao.dataParaCalendario(ftfData.getText()));
            ses.setHorario(Formatacao.horaParaCalendario(ftfHorario.getText()));
            ses.setValor(Double.valueOf(tfdValor.getText()));
            DaoGenerico.getInstance().insert(ses);
            JOptionPane.showMessageDialog(null, "Cadastro finalizado com sucesso!");
            inicia();
        } catch (HibernateException hibEx) {
            hibEx.printStackTrace();
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        List<Sessao> resultado = new ArrayList();
        String where;
        if (rbtFilme.isSelected()) {
            where = "Filme.nome LIKE '%" + tfdBuscar.getText() + "%' ";
        } else {
            where = "Sala.descricao LIKE '%" + tfdBuscar.getText() + "%' ";
        }
        String sql = "FROM Sessao LEFT JOIN Filme ON codFilme = Filme.codigo LEFT JOIN Sala ON codSala = Sala.codigo "
                + "WHERE " + where
                + "ORDER BY codigo";
        tblSessao.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblSessao.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblSessao.getColumnModel().getColumn(2).setPreferredWidth(70);
        tblSessao.getColumnModel().getColumn(3).setPreferredWidth(80);
        tblSessao.getColumnModel().getColumn(4).setPreferredWidth(60);
        tblSessao.getColumnModel().getColumn(5).setPreferredWidth(50);
        DefaultTableModel modelo = (DefaultTableModel) tblSessao.getModel();
        modelo.setNumRows(0);
        try {
            Session sessao = HibernateUtil.getSessionFactory().openSession();
            org.hibernate.Query query = sessao.createQuery(sql);
            resultado = query.list();
            for (int i = 0; i < resultado.size(); i++) {
                Sessao ses = resultado.get(i);
                modelo.addRow(new Object[]{ses.getCodigo(),
                    ses.getFilme(), ses.getSala(), Formatacao.calendarioParaData(ses.getData()), Formatacao.calendarioParaHora(ses.getHorario()), ses.getValor()});

            }
        } catch (HibernateException hibEx) {
            hibEx.printStackTrace();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tblSessaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSessaoMouseClicked
        String id = String.valueOf(tblSessao.getValueAt(tblSessao.getSelectedRow(), 0));
        List<Sessao> resultado = new ArrayList();
        Sessao ses = new Sessao();
        Session sessao = null;
        try {
            sessao = HibernateUtil.getSessionFactory().openSession();
            Transaction transacao = sessao.beginTransaction();

            org.hibernate.Query query = sessao.createQuery("FROM Sessao WHERE codigo = " + id);
            resultado = query.list();
            for (int i = 0; i < resultado.size(); i++) {
                ses = resultado.get(i);
            }
        } catch (HibernateException hibEx) {
            hibEx.printStackTrace();
        }
        List<Filme> resultadof = new ArrayList();
        Filme filme = new Filme();
        sessao = null;
        try {
            sessao = HibernateUtil.getSessionFactory().openSession();
            Transaction transacao = sessao.beginTransaction();

            org.hibernate.Query query = sessao.createQuery("FROM Filme WHERE codigo = " + String.valueOf(ses.getFilme()));
            resultadof = query.list();
            for (int i = 0; i < resultadof.size(); i++) {
                filme = resultadof.get(i);
            }
        } catch (HibernateException hibEx) {
            hibEx.printStackTrace();
        }
        List<Sala> resultados = new ArrayList();
        Sala sala = new Sala();
        sessao = null;
        try {
            sessao = HibernateUtil.getSessionFactory().openSession();
            Transaction transacao = sessao.beginTransaction();

            org.hibernate.Query query = sessao.createQuery("FROM Sala WHERE codigo = " + String.valueOf(ses.getSala()));
            resultados = query.list();
            for (int i = 0; i < resultados.size(); i++) {
                sala = resultados.get(i);
            }
        } catch (HibernateException hibEx) {
            hibEx.printStackTrace();
        }
        tfdCdFilme.setText(String.valueOf(ses.getFilme()));
        tfdCdSala.setText(String.valueOf(ses.getSala()));
        tfdValor.setText(String.valueOf(ses.getValor()));
        tfdFilme.setText(String.valueOf(filme.getNome()));
        tfdSala.setText(String.valueOf(sala.getDescricao()));
        jTabbedPane1.setSelectedIndex(0);
        tfdCdFilme.requestFocus();
    }//GEN-LAST:event_tblSessaoMouseClicked

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        DlgConsulta consultar = new DlgConsulta(null, true);
        consultar.tabela = consulta;
        consultar.setVisible(true);
        if (consulta == "Filme") {
            tfdCdFilme.setText(String.valueOf(consultar.retorno));
            tfdCdFilme.setEnabled(true);
            tfdCdFilme.requestFocus();
        }
        if (consulta == "Sala") {
            tfdCdSala.setText(String.valueOf(consultar.retorno));
            tfdCdSala.setEnabled(true);
            tfdCdSala.requestFocus();
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void tfdCdFilmeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdCdFilmeFocusGained
        consulta = "Filme";
    }//GEN-LAST:event_tfdCdFilmeFocusGained

    private void tfdCdSalaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdCdSalaFocusGained
        if (tfdCdFilme.getText().isEmpty()) {
            tfdCdFilme.requestFocus();
            JOptionPane.showMessageDialog(null, "É obrigatório preencher a sessão com um filme!");
        }
        consulta = "Sala";
    }//GEN-LAST:event_tfdCdSalaFocusGained

    private void tfdCdFilmeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdCdFilmeFocusLost
        if (!tfdCdFilme.getText().isEmpty()) {
            List<Filme> resultadof = new ArrayList();
            Filme filme = new Filme();
            Session sessao = null;
            try {
                sessao = HibernateUtil.getSessionFactory().openSession();
                Transaction transacao = sessao.beginTransaction();

                org.hibernate.Query query = sessao.createQuery("FROM Filme WHERE codigo = " + String.valueOf(tfdCdFilme.getText()));
                resultadof = query.list();
                for (int i = 0; i < resultadof.size(); i++) {
                    filme = resultadof.get(i);
                }
            } catch (HibernateException hibEx) {
                hibEx.printStackTrace();
            }
            tfdFilme.setText(filme.getNome());
            tfdCdSala.requestFocus();
        }
    }//GEN-LAST:event_tfdCdFilmeFocusLost

    private void tfdCdSalaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdCdSalaFocusLost
        if (!tfdCdSala.getText().isEmpty()) {
            List<Sala> resultadof = new ArrayList();
            Sala sala = new Sala();
            Session sessao = null;
            try {
                sessao = HibernateUtil.getSessionFactory().openSession();
                Transaction transacao = sessao.beginTransaction();

                org.hibernate.Query query = sessao.createQuery("FROM Sala WHERE codigo = " + String.valueOf(tfdCdSala.getText()));
                resultadof = query.list();
                for (int i = 0; i < resultadof.size(); i++) {
                    sala = resultadof.get(i);
                }
            } catch (HibernateException hibEx) {
                hibEx.printStackTrace();
            }
            tfdSala.setText(sala.getDescricao());
            ftfData.requestFocus();
        }
    }//GEN-LAST:event_tfdCdSalaFocusLost

    private void ftfDataFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ftfDataFocusGained
        if (tfdCdSala.getText().isEmpty()) {
            tfdCdSala.requestFocus();
            JOptionPane.showMessageDialog(null, "É obrigatório preencher a sessão com uma Sala!");
        }
    }//GEN-LAST:event_ftfDataFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JFormattedTextField ftfData;
    private javax.swing.JFormattedTextField ftfHorario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rbtFilme;
    private javax.swing.JRadioButton rbtSala;
    private javax.swing.JTable tblSessao;
    private javax.swing.JTextField tfdBuscar;
    private javax.swing.JTextField tfdCdFilme;
    private javax.swing.JTextField tfdCdSala;
    private javax.swing.JTextField tfdFilme;
    private javax.swing.JTextField tfdSala;
    private javax.swing.JTextField tfdValor;
    // End of variables declaration//GEN-END:variables
}
